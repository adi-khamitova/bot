# API_TOKEN = '7482452539:AAGpAW8VXjO9CGpYU57Xyv8xUcsfcKGx9SI'
from aiogram import Bot, Dispatcher, executor, types

# –ó–∞–º–µ–Ω–∏—Ç–µ —ç—Ç–æ—Ç —Ç–æ–∫–µ–Ω –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
API_TOKEN = '7482452539:AAGpAW8VXjO9CGpYU57Xyv8xUcsfcKGx9SI'
# –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –∫–∞–Ω–∞–ª
CHANNEL_USERNAME = '@adelya_test_for_test'

LESSONS_LINK = 'https://disk.yandex.ru/d/ivmqD-gXCg3mhw'

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_text = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üåü\n"
        "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, "
        "–ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª. üéâ\n\n"
        "–í –∫–∞—á–µ—Å—Ç–≤–µ –ø–æ–¥–∞—Ä–∫–∞ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –Ω–∞—à–∏–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –≤–∏–¥–µ–æ—É—Ä–æ–∫–∞–º! üé•"
    )

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
    subscribe_button = types.InlineKeyboardButton(
        text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=f"https://t.me/{CHANNEL_USERNAME}"
    )
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∏–¥–µ–æ—É—Ä–æ–∫–æ–≤
    lessons_button = types.InlineKeyboardButton(
        text="–ü–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏", callback_data='get_lessons'
    )

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = types.InlineKeyboardMarkup().add(subscribe_button, lessons_button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await message.reply(welcome_text, reply_markup=keyboard)

@dp.callback_query_handler(lambda c: c.data == 'get_lessons')
async def process_lessons_request(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    chat_member = await bot.get_chat_member(chat_id=CHANNEL_USERNAME, user_id=user_id)

    if chat_member.is_chat_member() or chat_member.status in ['member', 'administrator', 'creator']:
        await bot.send_message(callback_query.from_user.id, f"–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏: \n{LESSONS_LINK}")
    else:
        await bot.send_message(callback_query.from_user.id, (
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –º–æ–≥—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∞–º –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã. "
            "–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏¬ª —Å–Ω–æ–≤–∞! üéÅ"
        ))

    await bot.answer_callback_query(callback_query.id)

@dp.message_handler()
async def echo(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.answer(message.text)

if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    executor.start_polling(dp, skip_updates=True)